class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def merge_two_lists(l1, l2):
    dummy = ListNode()
    current = dummy

    while l1 and l2:
        if l1.val < l2.val:
            current.next = l1
            l1 = l1.next
        else:
            current.next = l2
            l2 = l2.next

        current = current.next
    if l1:
        current.next = l1
    elif l2:
        current.next = l2

    return dummy.next

def merge_k_sorted_lists(lists):
    if not lists:
        return None

    while len(lists) > 1:
        merged_lists = []
        for i in range(0, len(lists), 2):
            l1 = lists[i]
            l2 = lists[i + 1] if i + 1 < len(lists) else None
            merged = merge_two_lists(l1, l2)
            merged_lists.append(merged)

        lists = merged_lists

    return lists[0]

# Приклади використання:
lists1 = [
    ListNode(1, ListNode(4, ListNode(5))),
    ListNode(1, ListNode(3, ListNode(4))),
    ListNode(2, ListNode(6))
]
result1 = merge_k_sorted_lists(lists1)
while result1:
    print(result1.val, end=" ")
    result1 = result1.next
    
lists2 = []
result2 = merge_k_sorted_lists(lists2)
while result2:
    print(result2.val, end=" ")

lists3 = [ListNode()]
result3 = merge_k_sorted_lists(lists3)
while result3:
    print(result3.val, end=" ")
